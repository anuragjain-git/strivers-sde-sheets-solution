// QUESTION : https://leetcode.com/problems/implement-queue-using-stacks

/**

Approach 1

Time Complexity: O(N)  

Space Complexity: O(2N)
 */

class MyQueue {

    Stack<Integer> input = new Stack<>();
    Stack<Integer> output = new Stack<>();

    public MyQueue() {
        
    }
    
    public void push(int x) {
        while(input.empty() == false) {
            output.push(input.peek());
            input.pop();
        }
        input.push(x);
        while(output.empty() == false) {
            input.push(output.peek());
            output.pop();
        }
    }
    
    public int pop() {
        if(input.empty()) return -1;
        
        int val = input.peek();
        input.pop();
        return val;
    }
    
    public int peek() {
        if(input.empty()) return -1;
        return input.peek();
    }
    
    public boolean empty() {
        return input.empty();
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */