QUESTION - https://www.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1

/*
    Optimal Approach -
    T(n) = O(nlogn) + O(n*maxDeadline)
    S(n) = O(maxDeadline)
*/

class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        // lambda expression representing a comparator function 
        // it takes two Job objects, a and b, and compares them based on their profit attributes in descending order
        // If the subtraction returns a positive number, the comparator swaps 'a' and 'b'
        // if the subtraction result is zero or negative, no swap occurs
        Arrays.sort(arr, (a, b) -> (b.profit - a.profit));
        
        // find maximum deadline to complete each job at its last date
        int maxDeadline = 0;
        for(int i = 0; i < n; i++) {
            if(arr[i].deadline > maxDeadline) maxDeadline = arr[i].deadline;
        }
        
        // assuming job_id starts at 1
        int storeJob[] = new int[maxDeadline + 1];
        for(int i = 1; i <= maxDeadline; i++) {
            storeJob[i] = -1;
        }
        
        int countJobs = 0;
        int profit = 0;
        
        for(int i = 0; i < n; i++) {
            // at index 0 has the longest deadline
            for(int j = arr[i].deadline; j > 0; j--) {
                
                // check if last date of the deadline is free if not deadline-- and check 1 day before
                if(storeJob[j] == -1) {
                    // add job id to that slot if question asked to return job sequence
                    storeJob[j] = arr[i].id;
                    profit += arr[i].profit;
                    countJobs++;
                    break;
                }
            }
        }
        int ans[] = {countJobs, profit};
        return ans;
    }
}

/*
class Job {
    int id, profit, deadline;
    Job(int x, int y, int z){
        this.id = x;
        this.deadline = y;
        this.profit = z; 
    }
}
*/
