Question: https://leetcode.com/problems/pascals-triangle

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        for(int row = 1; row <= numRows; row++) {
            List<Integer> tempList = new ArrayList<>();
            for(int col = 1; col <= row; col++) {
                tempList.add(nCr(row-1, col-1));
            }
            ans.add(tempList);
        }
        return ans;
    }
    public int nCr(int n, int r) {
        long res = 1;
        for(int i = 0; i < r; i++) {
            res = res * (n - i);
            res = res / (i + 1);
        }
        return (int)res;
    }

    // ignore below code
    // code to print out a row from pascal's triangle
    public static void fun(int numRow) {
        if (numRow == 0) {
            System.out.print("numRow can't be zero.");
            return;
        }
        int res = 1;
        System.out.print(res);
        for(int i =1; i<numRow; i++) {
            res = res * (numRow-i);
            res = res / (i);
            System.out.print(res);
        }
    }
}
